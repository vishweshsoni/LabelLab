{
  "_args": [
    [
      "audit",
      "/home/vishwesh/Desktop/LabeLab-node/LabelLab"
    ]
  ],
  "_from": "audit@latest",
  "_id": "audit@0.0.6",
  "_inCache": true,
  "_installable": true,
  "_location": "/audit",
  "_phantomChildren": {},
  "_requested": {
    "name": "audit",
    "raw": "audit",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/audit/-/audit-0.0.6.tgz",
  "_shasum": "fef17dd84af1dcd2a5633fd46d3b1adcb084bf3b",
  "_shrinkwrap": null,
  "_spec": "audit",
  "_where": "/home/vishwesh/Desktop/LabeLab-node/LabelLab",
  "author": {
    "email": "chlavois@gmail.com",
    "name": "Weltschmerz"
  },
  "bugs": {
    "url": "https://github.com/Weltschmerz/Audit/issues"
  },
  "dependencies": {},
  "description": "Generate performance statistics for async or sync functions",
  "devDependencies": {
    "should": "1.0.0",
    "vows": "0.6.3"
  },
  "directories": {},
  "dist": {
    "shasum": "fef17dd84af1dcd2a5633fd46d3b1adcb084bf3b",
    "tarball": "https://registry.npmjs.org/audit/-/audit-0.0.6.tgz"
  },
  "engines": {
    "node": ">= 0.5.0"
  },
  "homepage": "https://github.com/Weltschmerz/Audit#readme",
  "keywords": [
    "audit",
    "bench",
    "performance"
  ],
  "main": "lib/audit.js",
  "maintainers": [
    {
      "name": "Weltschmerz",
      "email": "chlavois@gmail.com"
    }
  ],
  "name": "audit",
  "optionalDependencies": {},
  "readme": "\n# Audit\n\n`npm install audit`\n\nAudit is a benchmarking tool for asynchronous or synchronous functions. It generates the following statistics:\n\n* elapsed time\n* iterations\n* operations per second\n* mean\n* median\n* mode\n* max\n* min\n\n\n## Basic usage\n\n```js\nvar Audit = require('audit')\nvar audit = new Audit({\n    iterations:100\n})\n\naudit.on('complete', function(stats) {\n    console.log(stats)\n})\n\naudit.on('auditing', function(name) {\n    console.log('Auditing', name, '...')\n})\n\naudit.on('auditcomplete', function(stats) {\n    console.log('Completed', stats.name)\n})\n\naudit.async(function(next) {\n    return next()\n})\n\naudit.sync(function() {\n    return 1\n})\n\naudit.run()\n```\n\n## Chaining\n\n```js\nvar Audit = require('audit')\nvar audit = new Audit()\n\naudit.on('complete', console.log)\n\naudit\n.async('mytestname', function(next) {\n    return next()\n})\n.async('mytestname2', function(next) {\n    return next()\n})\n.async('mytestname3', function(next) {\n    return next()\n})\n.run()\n\n```\n\n## Stats\n\nThe stats object contains the following properties:\n\n* `name`\n* `elapsed`\n* `iterations`\n* `opsPerSecond`\n* `mode`\n* `median`\n* `mean`\n* `max`\n* `min`\n\nSample output:\n\n```\nBenching musicmetadata...\nmusicmetadata 23.12673450508788\nBenching child-ffmpeg...\nchild-ffmpeg 7.58150113722517\n{\n    \"musicmetadata\": {\n        \"name\": \"musicmetadata\",\n        \"elapsed\": \"4324ms\",\n        \"iterations\": 100,\n        \"opsPerSecond\": 23.12673450508788,\n        \"mode\": [ \"19ms\", \"1occ\" ],\n        \"median\": \"45ms\",\n        \"mean\": \"43.676767676767675ms\",\n        \"max\": [ \"61ms\", \"7ind\" ],\n        \"min\": [ \"19ms\", \"0ind\" ]\n},\n    \"child-ffmpeg\": {\n        \"name\": \"child-ffmpeg\",\n        \"elapsed\": \"13190ms\",\n        \"iterations\": 100,\n        \"opsPerSecond\": 7.58150113722517,\n        \"mode\": [ \"128ms\", \"1occ\" ],\n        \"median\": \"131ms\",\n        \"mean\": \"133.23232323232324ms\",\n        \"max\": [ \"221ms\", \"0ind\" ],\n        \"min\": [ \"128ms\", \"19ind\" ]\n    }\n}\n\n```\n\n## Options\n\nPass options to the audit constructor function in an object. Options and their default values follow.\n\n* `iterations` **Number** *1000*\n\nNumber of times to execute the provided functions\n\n* `pause` **Number** *100*\n\nNumber of milliseconds to pause between audits.\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/Weltschmerz/Audit.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "0.0.6"
}
